[
  {
    "objectID": "notebooks/COVID_time_analysis.html",
    "href": "notebooks/COVID_time_analysis.html",
    "title": "Startup COVID era analysis",
    "section": "",
    "text": "Code\nimport sys\nsys.path.append('../src/')\n\nimport loader\nimport numpy as np\nimport pandas as pd\nfrom datetime import datetime as dt\n\nfrom IPython.display import Markdown, display\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\n\nfrom arch.unitroot.unitroot import DFGLS\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nimport statsmodels.api as sm\nfrom statsmodels.tsa.arima.model import ARIMA, ARIMAResults\n\nplt.rcParams['font.family'] = 'Adobe Caslon Pro'\nplt.rcParams['font.size'] = 12\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nprint(\"setting up the data...\")\n\nmacro_data = loader.startupMacro()\ndata = macro_data.load()\n\n\nsetting up the data...\n\n\n\n1 Testing for unit root\nThe whole duration of the data is used for this test statistics to avoid any potential bias.\n\n\nCode\nplt.figure(figsize=(12, 6))\nplt.grid(True, which=\"both\", ls=\"--\", lw=0.5)\n\nCOVID = dt.strptime(\"2020-05-01\", '%Y-%m-%d')\nNORMAL = dt.strptime(\"2022-02-01\", '%Y-%m-%d')\n\nax = plt.gca()\nax.xaxis.set_major_locator(mdates.YearLocator())\nax.xaxis.set_minor_locator(mdates.MonthLocator(interval=3))\n\nplt.xlim(\n    dt.strptime(\"2006-01-01\", '%Y-%m-%d'), \n    dt.strptime(\"2024-01-01\", '%Y-%m-%d')\n    )\n\nplt.axvline(x=COVID, color='#AAAAAA', linestyle='--',  label='COVID-19 Restriction established', lw=1.5)\nplt.axvline(x=NORMAL, color='#888888', linestyle='-.',  label='COVID-19 Restriction lifted', lw=1.5)\nsns.lineplot(data=data.loc[:,[\n    \"Start-up grant for non-unemployed\",\n    \"Start-up grant for unemployed\"\n]], palette=[\"#8ecae6\",\"#ffb703\"], dashes=False, ax=ax)\n\n\nplt.show()\n\n\n\n\n\n\n\n\n\nThe DF-GLS test for unit-root indicates that both series are affected by unit-root at their 7th lag, and cannot reject the existance of the unit-root.\n\n\nCode\ncol1 = \"Start-up grant for non-unemployed\"\ntest_1 = DFGLS(data[col1], max_lags=12, method=\"bic\").summary()\n\nprint(test_1.as_text())\n\n\n      Dickey-Fuller GLS Results      \n=====================================\nTest Statistic                 -0.625\nP-value                         0.462\nLags                                7\n-------------------------------------\n\nTrend: Constant\nCritical Values: -2.66 (1%), -2.04 (5%), -1.72 (10%)\nNull Hypothesis: The process contains a unit root.\nAlternative Hypothesis: The process is weakly stationary.\n\n\n\n\nCode\ncol2 = \"Start-up grant for unemployed\"\ntest_2 = DFGLS(data[col2], max_lags=12, method=\"bic\").summary()\nprint(test_2.as_text())\n\n\n      Dickey-Fuller GLS Results      \n=====================================\nTest Statistic                 -1.443\nP-value                         0.144\nLags                                7\n-------------------------------------\n\nTrend: Constant\nCritical Values: -2.66 (1%), -2.04 (5%), -1.72 (10%)\nNull Hypothesis: The process contains a unit root.\nAlternative Hypothesis: The process is weakly stationary.\n\n\nFirst differencing the series resulted in a stationary series. This means that the unit-root is not cause by trend, nor drift. Hence the plausable datagenerating process is:\n\\[ y_{t} = \\alpha_0 + \\alpha_1 y_{t-1} + \\varepsilon_{t} \\]\nTherefore further uni-variate time-series analysis could be implemented.\n\n\nCode\ncol1 = \"Start-up grant for non-unemployed\"\ntest_1 = DFGLS(data[col1].diff().dropna(), max_lags=12, method=\"bic\").summary()\nprint(test_1.as_text())\n\n\n      Dickey-Fuller GLS Results      \n=====================================\nTest Statistic                 -4.039\nP-value                         0.000\nLags                                6\n-------------------------------------\n\nTrend: Constant\nCritical Values: -2.66 (1%), -2.04 (5%), -1.72 (10%)\nNull Hypothesis: The process contains a unit root.\nAlternative Hypothesis: The process is weakly stationary.\n\n\n\n\nCode\ncol2 = \"Start-up grant for unemployed\"\ntest_2 = DFGLS(data[col2].diff().dropna(), max_lags=12, method=\"bic\").summary()\nprint(test_2.as_text())\n\n\n      Dickey-Fuller GLS Results      \n=====================================\nTest Statistic                 -1.990\nP-value                         0.046\nLags                                6\n-------------------------------------\n\nTrend: Constant\nCritical Values: -2.66 (1%), -2.04 (5%), -1.72 (10%)\nNull Hypothesis: The process contains a unit root.\nAlternative Hypothesis: The process is weakly stationary.\n\n\n\n\n2 Start-up grant for unemployed (count)\nThe autocorrelation (ACF) and partial autocorrelation (PACF) plots shows the behaviour of a autoregressive model (AR).\n\n\nCode\nmodel_df = data.copy()\nmodel_df.loc[:,\"d_unemp\"] = model_df[\"Start-up grant for unemployed\"].diff()\nfig, ax = plt.subplots(1,2, figsize=(12, 4))\n\nplot_pacf(model_df[\"d_unemp\"].dropna(), lags=24, ax=ax[0])\nplot_acf(model_df[\"d_unemp\"].dropna(), lags=24, ax=ax[1])\n\nplt.show()\n\n\n\n\n\n\n\n\n\nThe PACF plot shows autocorrelation at lages 1,6, and 7. Therefore they are included in the linear model. Further, two constants are added for dates 2020-05-01, 2021-12-01, where they have value 0 prior to the date, and 1 thereafter. These two dates were derived from the data itself, eventhough COVID restrictions were lifted two months after.\n\n\nCode\nmodel_df.loc[:,\"COVID\"] = (model_df.index &gt; \"2020-05-01\").astype(int)\nmodel_df.loc[:,\"lifted\"] = (model_df.index &gt; \"2021-09-01\").astype(int)\n\nmodel_df = model_df.dropna()\n\nmodel = ARIMA(model_df[\"d_unemp\"].values, exog=model_df[[\"COVID\",\"lifted\"]], order=((1,6,7),0,0)).fit()\n\nmodel.summary()\n\n\n\n\nSARIMAX Results\n\n\nDep. Variable:\ny\nNo. Observations:\n216\n\n\nModel:\nARIMA([1, 6, 7], 0, 0)\nLog Likelihood\n-1125.715\n\n\nDate:\nSat, 02 Mar 2024\nAIC\n2265.430\n\n\nTime:\n21:10:49\nBIC\n2289.057\n\n\nSample:\n02-28-2006\nHQIC\n2274.976\n\n\n\n- 01-31-2024\n\n\n\n\nCovariance Type:\nopg\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n-3.4281\n7.376\n-0.465\n0.642\n-17.885\n11.029\n\n\nCOVID\n68.1454\n19.831\n3.436\n0.001\n29.278\n107.013\n\n\nlifted\n-53.4809\n26.146\n-2.046\n0.041\n-104.725\n-2.237\n\n\nar.L1\n0.6566\n0.053\n12.302\n0.000\n0.552\n0.761\n\n\nar.L6\n-0.4833\n0.055\n-8.846\n0.000\n-0.590\n-0.376\n\n\nar.L7\n0.3413\n0.062\n5.473\n0.000\n0.219\n0.463\n\n\nsigma2\n1950.1346\n191.430\n10.187\n0.000\n1574.939\n2325.330\n\n\n\n\n\n\nLjung-Box (L1) (Q):\n0.00\nJarque-Bera (JB):\n0.08\n\n\nProb(Q):\n0.97\nProb(JB):\n0.96\n\n\nHeteroskedasticity (H):\n1.08\nSkew:\n0.04\n\n\nProb(H) (two-sided):\n0.76\nKurtosis:\n3.04\n\n\n\nWarnings:[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n\n\n\nThe regression results shows a clear significance for both dates with coefficient for COVID restrinctions 33.51, and -30.16 for the lifted restriction. Interesting point is that the sum of these two coefficients is 3.35, indicating that the levels of application count is stablized at higher value compared to pre-COVID time. The residuals do not show any autoregressive behaviour, and therefore, the model is reliable.\n\n\n3 Start-up grant for employed (count)\n\n\nCode\nmodel_df = data.copy()\nmodel_df.loc[:,\"d_emp\"] = model_df[\"Start-up grant for non-unemployed\"].diff()\nmodel_df = model_df.dropna()\n\nfig, ax = plt.subplots(1,2, figsize=(12, 4))\n\nplot_pacf(model_df[\"d_emp\"].dropna(), lags=24, ax=ax[0])\nplot_acf(model_df[\"d_emp\"].dropna(), lags=24, ax=ax[1])\n\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nCode\nmodel_df.loc[:,\"COVID\"] = (model_df.index &gt; \"2020-05-01\").astype(int)\nmodel_df.loc[:,\"lifted\"] = (model_df.index &gt; \"2021-09-01\").astype(int)\nmodel = ARIMA(model_df[\"d_emp\"].values, exog=model_df[[\"COVID\",\"lifted\"]], order=((1,2,6,7),0,[2])).fit()\n\nmodel.summary()\n\n\n\n\nSARIMAX Results\n\n\nDep. Variable:\ny\nNo. Observations:\n216\n\n\nModel:\nARIMA([1, 2, 6, 7], 0, [2])\nLog Likelihood\n-1171.633\n\n\nDate:\nSat, 02 Mar 2024\nAIC\n2361.265\n\n\nTime:\n21:10:49\nBIC\n2391.643\n\n\nSample:\n02-28-2006\nHQIC\n2373.538\n\n\n\n- 01-31-2024\n\n\n\n\nCovariance Type:\nopg\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n1.5633\n10.912\n0.143\n0.886\n-19.824\n22.950\n\n\nCOVID\n95.2048\n31.568\n3.016\n0.003\n33.333\n157.077\n\n\nlifted\n-83.2810\n36.256\n-2.297\n0.022\n-154.342\n-12.220\n\n\nar.L1\n0.6211\n0.051\n12.111\n0.000\n0.521\n0.722\n\n\nar.L2\n0.1966\n0.062\n3.191\n0.001\n0.076\n0.317\n\n\nar.L6\n-0.6768\n0.042\n-16.059\n0.000\n-0.759\n-0.594\n\n\nar.L7\n0.5152\n0.058\n8.954\n0.000\n0.402\n0.628\n\n\nma.L2\n-0.1663\n0.078\n-2.132\n0.033\n-0.319\n-0.013\n\n\nsigma2\n2954.8911\n228.897\n12.909\n0.000\n2506.261\n3403.522\n\n\n\n\n\n\nLjung-Box (L1) (Q):\n0.44\nJarque-Bera (JB):\n27.86\n\n\nProb(Q):\n0.51\nProb(JB):\n0.00\n\n\nHeteroskedasticity (H):\n0.79\nSkew:\n-0.15\n\n\nProb(H) (two-sided):\n0.33\nKurtosis:\n4.73\n\n\n\nWarnings:[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n\n\n\n\n\nCode\nfig, ax = plt.subplots(1,2, figsize=(12, 4))\n\nplot_pacf(model.resid, lags=24, ax=ax[0])\nplot_acf(model.resid, lags=24, ax=ax[1])\n\nplt.show()\n\n\n\n\n\n\n\n\n\nThe ACF and PACF plots of model residuals do not show any autoregressive behaviour. Therefore the model is fitting properly."
  }
]